{"version":3,"sources":["PageHeader.js","CloseModalButton.js","AnimatedHeadline.js","Recording.js","SortMenu.js","RecordingContainer.js","PageBottom.js","Credits.js","App.js","serviceWorker.js","index.js"],"names":["PageHeader","props","state","className","Component","CloseModalButton","onClick","this","AnimatedHeadline","text","index","trueChars","headSize","timerID","setInterval","animateNextChar","clearInterval","txt","headline","length","i","charAt","j","Math","floor","random","setState","modalRoot","document","getElementById","Recording","toggleFullScreen","e","active","preventDefault","prevState","body","getElementsByTagName","classList","add","remove","closeModal","console","log","portalElement","createElement","divStyle","background","imgSrc","backgroundSize","handleClick","bind","querySelector","addEventListener","modal","style","artist","title","year","description","width","height","src","youtube","frameBorder","allow","allowFullScreen","alt","ReactDOM","createPortal","PureComponent","SortMenu","dateAsc","dateDes","titleAlph","artistAlph","RecordingContainer","recordings","currentSort","sortingOptions","DATE_ASCENDING","DATE_DESCENDING","TITLE","ARTIST","initRecordings","populateRecordings","reversed","reverse","titleSorted","sort","sortByTitleAlphabetical","artistSorted","sortByArtistAlphabetical","elements","getElementsByClassName","Data","push","key","image","offset","animate","offsetWidth","a","b","Number","artistA","toUpperCase","artistB","titleA","titleB","handleDateAscendingButton","handleDateDescendingButton","handleAlphabeticalTitleButton","handleAlphabeticalArtistButton","PageBottom","activeClass","to","spy","smooth","duration","Credits","App","Boolean","window","location","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.575d8813.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass PageHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"header\">\r\n                <div className=\"headline-bg\">\r\n                    <h1>50 Years of Electronic Music</h1>\r\n                </div>\r\n                <p>The influence of technology on music has gone from obscure instruments and esoteric experimentation to an essential component of music production. Here are 50 recordings that have shaped the landscape of music and made electronic music one of the most vibrant artistic fields in our culture.</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PageHeader;","import React, { Component } from 'react';\r\n\r\nclass CloseModalButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <button className=\"close-modal-button\" onClick={this.props.onClick}></button>\r\n        );\r\n    }\r\n}\r\n \r\nexport default CloseModalButton;","import React, { Component } from 'react';\r\n\r\nclass AnimatedHeadline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { text: \"\", index: 0 }\r\n        this.trueChars = 0;\r\n    }\r\n    render() { \r\n        return ( <this.props.headSize>{this.state.text}</this.props.headSize> );\r\n    }\r\n\r\n    componentDidMount() {\r\n        // TODO: may need to activate the setinterval elsewhere (particularly if we want the headline to animate each time we bring up the modal description window.)\r\n        this.timerID = setInterval(\r\n          () => this.animateNextChar(),\r\n          50\r\n        );\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n      }\r\n    \r\n\r\n    animateNextChar(){\r\n\r\n        let txt = \"\";\r\n        //let characters = \"BCDFGHJKLMNRSTVWXYZ0123456789!@#$%^&*()<>+=â–‘â–’â–“â––â–—â–˜â–™â–šâ–›â–œâ–žâ–ŸðŸž›â¬šâ¬›â—©â—³â—²â—±â—°â–¦\";\r\n        //let characters = \"â–‘â–’â–“\";\r\n        let characters = \"BCDFGHJKLMNRSTVWXYZ0123456789\";\r\n\r\n        // We've already rendered every correct character in the headline\r\n        if (this.trueChars > this.props.headline.length){\r\n            clearInterval(this.timerID);\r\n            return;\r\n        }\r\n        \r\n        for (var i = 0; i < this.trueChars; i++){\r\n            txt += this.props.headline.charAt(i);\r\n        }\r\n\r\n        for (var j = this.trueChars; j < this.props.headline.length; j++) {\r\n            let randChar = characters.charAt(Math.floor(Math.random() * characters.length));\r\n            txt += randChar;\r\n        }\r\n        this.trueChars++;\r\n        this.setState({text: txt});\r\n    }\r\n\r\n    \r\n}\r\n \r\nexport default AnimatedHeadline;","import React, { PureComponent } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CloseModalButton from './CloseModalButton';\r\nimport AnimatedHeadline from './AnimatedHeadline';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nclass Recording extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            active: false,\r\n            className: 'recording-margin'\r\n        }\r\n        this.portalElement = document.createElement('div');\r\n        this.divStyle = {\r\n            background: ' linear-gradient(to left, rgba(0,0,0,0.33) 0%,rgba(0,0,0,1) 99%,rgba(0,0,0,1) 100%), url(' + props.imgSrc + ')',\r\n            backgroundSize: '100%',\r\n          };\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n        //this.CSSOffset = \"recording-margin data-offset=\" + this.props.offset;\r\n    }\r\n    \r\n    handleClick(e){\r\n        e.preventDefault();\r\n        this.setState(prevState => ({\r\n            active: false\r\n        }));\r\n        let body = document.getElementsByTagName('body')[0];\r\n\r\n        if (body.classList.length === 0){\r\n            body.classList.add('modal-active');\r\n        }\r\n        else {\r\n            body.classList.remove('modal-active');\r\n        }\r\n    }\r\n    \r\n    toggleFullScreen = (e) => {\r\n        if (this.state.active){return;}\r\n\r\n        e.preventDefault();\r\n        this.setState(prevState => ({\r\n            active: true//!prevState.active\r\n        }));\r\n\r\n        let body = document.getElementsByTagName('body')[0];\r\n\r\n        if (body.classList.length === 0){\r\n            body.classList.add('modal-active');\r\n        }\r\n        else {\r\n            body.classList.remove('modal-active');\r\n        }\r\n      };\r\n\r\n    closeModal = () => {\r\n        console.log(\"close modal\");\r\n        this.setState(prevState => ({\r\n            active: false\r\n        }));\r\n    };\r\n\r\n    componentDidMount(){\r\n        const animated = document.querySelector('.recording-margin');\r\n        animated.addEventListener('animationcancel', () => {\r\n            console.log('Animation cancel');\r\n          });\r\n    }  \r\n\r\n    render() { \r\n        let modal;\r\n        if (this.state.active) {\r\n            modal = \r\n            <div className='modal-fullscreen'>\r\n                <div className=\"modal-popup\" style={this.divStyle}>\r\n                    \r\n                        <div className=\"modal-titles\">                            \r\n                            <AnimatedHeadline headline={this.props.artist} headSize=\"h1\"></AnimatedHeadline>\r\n                            <AnimatedHeadline headline={this.props.title} headSize=\"h2\"></AnimatedHeadline>\r\n                            <h3>{this.props.year}</h3>\r\n                            <hr/>\r\n                        </div>     \r\n                        <div className=\"modal-container \" >\r\n                        <p className=\"rec-description\">{this.props.description}</p>\r\n                        <div className=\"youtube-wrapper\">\r\n                            <iframe title=\"YouTube Video\" width=\"560\" height=\"315\" src={this.props.youtube} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                        </div>  \r\n                        <CloseModalButton onClick={this.handleClick}/>                  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            /*\r\n            modal = <RecordingPopup \r\n                artist={this.props.artist}\r\n                title={this.props.title}\r\n                year={this.props.year}\r\n                image={this.props.imgSrc}\r\n                description={this.props.description}\r\n                youtube={this.props.youtube}\r\n                onClick={this.closeModal}\r\n            />*/\r\n        }\r\n\r\n        return ( \r\n            <div className={/*this.CSSOffset*/this.state.className} /*\"recording-margin \"*/>\r\n                <div className=\"recording\"  onClick={this.toggleFullScreen}>\r\n                    <a>\r\n                        <img src={this.props.imgSrc} alt={this.props.title}/>\r\n                        <div className=\"recTileText\">\r\n                            <p className=\"recTileArtist\">{this.props.artist}</p>\r\n                            <p className=\"recTileTitle\">{this.props.title}</p>\r\n                            <p className=\"recTileYear\">{this.props.year}</p>\r\n                        </div>\r\n                    </a>\r\n                    {ReactDOM.createPortal( modal, modalRoot)} \r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Recording;","import React, { Component } from 'react';\r\n\r\nclass SortMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"sort-menu\">\r\n                <h1>Sorting Options</h1>\r\n                <button onClick={this.props.dateAsc}>by year ascending</button>\r\n                <button onClick={this.props.dateDes}>by year descending</button>\r\n                <button onClick={this.props.titleAlph}>by title</button>\r\n                <button onClick={this.props.artistAlph}>by artist</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default SortMenu;","import React, { Component } from 'react';\r\n\r\nimport Recording from './Recording';\r\nimport Data from './data.json';\r\nimport SortMenu from './SortMenu';\r\n\r\nclass RecordingContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { recordings: [], currentSort: 0 };\r\n        this.sortingOptions = {\r\n            DATE_ASCENDING: 0,\r\n            DATE_DESCENDING: 1,\r\n            TITLE: 2,\r\n            ARTIST: 3\r\n        }\r\n        this.initRecordings = [];\r\n        this.populateRecordings();\r\n        this.reversed = [...this.initRecordings].reverse();\r\n        this.titleSorted = [...this.initRecordings].sort(this.sortByTitleAlphabetical);\r\n        this.artistSorted = [...this.initRecordings].sort(this.sortByArtistAlphabetical);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            recordings: this.initRecordings\r\n        });  \r\n        this.elements = document.getElementsByClassName('rec-grid')[0];\r\n    }\r\n\r\n    populateRecordings(){\r\n        for (let i = 0; i < Data.recordings.length; i++) {\r\n            this.initRecordings.push(\r\n                <Recording \r\n                    key={Data.recordings[i].year}\r\n                    artist={Data.recordings[i].artist} \r\n                    title={Data.recordings[i].title} \r\n                    year={Data.recordings[i].year}\r\n                    // https://stackoverflow.com/questions/37644265/correct-path-for-img-on-react-js\r\n                    imgSrc={ '/img/' + Data.recordings[i].image}\r\n                    youtube={Data.recordings[i].youtube}\r\n                    description={Data.recordings[i].description}\r\n                    offset={i+1}\r\n                    />\r\n                );\r\n            }\r\n    }\r\n\r\n    handleDateAscendingButton() {\r\n        if (this.state.currentSort === 0) return;\r\n\r\n        this.setState(\r\n            (state) => (\r\n                {\r\n                recordings: this.initRecordings,\r\n                currentSort: 0\r\n            })\r\n        ); \r\n        this.animate();\r\n    }\r\n\r\n    handleDateDescendingButton() {\r\n        if (this.state.currentSort === 1) return;\r\n        this.setState(\r\n            (state) => (\r\n                {\r\n                recordings: this.reversed,\r\n                currentSort: 1\r\n            })\r\n        );\r\n        this.animate();\r\n    }\r\n\r\n    handleAlphabeticalTitleButton() {\r\n        if (this.state.currentSort === 2) return;\r\n        this.setState(\r\n            (state) => (\r\n                {\r\n                recordings: this.titleSorted,\r\n                currentSort: 2\r\n            })\r\n        );\r\n        this.animate();\r\n    }\r\n\r\n    handleAlphabeticalArtistButton(){\r\n        if (this.state.currentSort === 3) return;\r\n        this.setState(\r\n            (state) => (\r\n                {\r\n                recordings: this.artistSorted,\r\n                currentSort: 3\r\n            })\r\n        );\r\n        this.animate();\r\n    }\r\n\r\n    animate(){\r\n        this.elements.className = 'rec-grid';\r\n        void this.elements.offsetWidth;\r\n        this.elements.className = 'rec-grid animate-in';\r\n    }\r\n\r\n    sortByDateAscending(a,b){\r\n        return Number(a.props.year) - Number(b.props.year);\r\n    }\r\n    sortByDateDescending(a,b){\r\n        return Number(b.props.year) - Number(a.props.year);\r\n    }\r\n    sortByArtistAlphabetical(a,b){\r\n        let artistA = a.props.artist.toUpperCase();\r\n        let artistB = b.props.artist.toUpperCase();\r\n        \r\n        if (artistA < artistB) {\r\n            return -1;\r\n        }\r\n        if (artistA > artistB) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    sortByTitleAlphabetical(a,b){\r\n        let titleA = a.props.title.toUpperCase();\r\n        let titleB = b.props.title.toUpperCase();\r\n        \r\n        if (titleA < titleB) {\r\n            return -1;\r\n        }\r\n        if (titleA > titleB) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    } \r\n    \r\n    render() {    \r\n        return ( \r\n            <div className=\"recordingContainer\">   \r\n                <SortMenu \r\n                    dateAsc={this.handleDateAscendingButton.bind(this)} \r\n                    dateDes={this.handleDateDescendingButton.bind(this)} \r\n                    titleAlph={this.handleAlphabeticalTitleButton.bind(this)} \r\n                    artistAlph={this.handleAlphabeticalArtistButton.bind(this)}\r\n                />    \r\n                <div className=\"rec-grid\">\r\n                    {this.state.recordings}\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default RecordingContainer;","import React, { Component } from 'react';\r\nimport { Link/*, animateScroll as scroll*/ } from \"react-scroll\";\r\n\r\nclass PageBottom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (   \r\n            <Link\r\n                activeClass=\"active\"\r\n                to=\"header\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n            >\r\n\r\n                <div className=\"page-bottom\">\r\n                <h3>Return to top</h3>\r\n                </div>\r\n\r\n            </Link>\r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default PageBottom;","import React, { Component } from 'react';\r\n\r\nclass Credits extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"credits\">\r\n                <h2>Credits</h2>\r\n                <p>Designed, coded, and written by Kelly Horan</p>\r\n                <p>Made with React, HTML5, JavaScript, and CSS</p>\r\n                <p>Image Credits: RateYourMusic, MusicBrainz, Discogs, Wikipedia, and The Vinyl Factory.</p>\r\n                {/*\r\n                <ul>\r\n                    <li>RateYourMusic</li>\r\n                    <li>MusicBrainz</li>\r\n                    <li>Discogs</li>\r\n                    <li>Wikipedia</li>\r\n                    <li>The Vinyl Factory (https://thevinylfactory.com/features/electric-futurism-francis-bebey/)</li>\r\n                </ul>\r\n                */}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Credits;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport PageHeader from './PageHeader';\r\nimport RecordingContainer from './RecordingContainer';\r\nimport PageBottom from './PageBottom';\r\nimport Credits from './Credits';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n    \r\n        <div className=\"App\">\r\n        <div className=\"app-overlay\"></div>\r\n          <PageHeader/>\r\n          <RecordingContainer />\r\n          <Credits/>\r\n          <PageBottom />\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}